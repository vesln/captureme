#!/usr/bin/env node

/**
 * Dependencies.
 */

var fs = require('fs');
var debug = require('sherlock')('captureme:cli');
var Batch = require('batch');
var resolve = require('path').resolve;
var _ = require('../util');
var parseUrl = require('../url');
var Capturer = require('../capturer');
var env = process.env;

var argv = require('optimist')
  .usage('Usage: $0 --url [str] --browsers [str]')
  .demand([ 'url' ])
  .demand([ 'browsers' ])
  .options('size', {
    describe: 'browser resolution, example: 640x200'
  })
  .options('save', {
    describe: 'save path'
  })
  .options('browsers', {
    describe: 'browser list, example: ie6,ff22,chrome32'
  })
  .options('url', {
    describe: 'target'
  })
  .default('save', resolve('.'))
  .argv;

/**
 * Credentials.
 */

var user = env.SAUCE_USERNAME;
var key = env.SAUCE_ACCESS_KEY;

/**
 * Input.
 */

var originalUrl = argv.url;
var dest = argv.save;
var size = (argv.size || 'x').split('x');
var width = size[0];
var height = size[1];

try {
  var browsers = _.parseBrowsers(argv.browsers);
} catch(e) {
  _.error(e.message);
}

/**
 * Simple input validation.
 */

if (!originalUrl) _.error('`--url` is missing');
if (!browsers.length) _.error('`--browsers` is missing');

debug('user: %s', user);
debug('browsers: %j', browsers);
debug('width: %s', width);
debug('height: %s', height);

/**
 * Setup the batch.
 */

var batch = new Batch;

parseUrl(originalUrl, function(err, url) {
  if (err) throw err;

  debug('original url: %s', originalUrl);
  debug('url: %s', url);

  var opts = { url: url, width: width, height: height };

  browsers.forEach(function(browser) {
    batch.push(function(done) {
      var capturer = new Capturer(user, key, browser);
      capturer.capture(opts, function(err, data) {
        if (err) return done(err);

        var filePath = _.filePath(dest, browser.alias, originalUrl);
        debug('store file: %s', filePath);
        fs.writeFile(filePath, data, 'base64', done);
      });
    });
  });

  batch.on('progress', function(e) {
    debug('progress: ' + e.percent + '%');
  });

  batch.end(function(err) {
    debug('done');
    if (err) throw err;
    process.exit(0);
  });
});
