#!/usr/bin/env node

/**
 * Dependencies.
 */

var wd = require('wd');
var fs = require('fs');
var config = require('../browsers');
var argv = require('argvee')();
var debug = require('sherlock')('captureme');
var Batch = require('batch');
var path = require('path');
var env = process.env;

/**
 * Credentials.
 */

var user = env.SAUCE_USERNAME;
var key = env.SAUCE_ACCESS_KEY;

/**
 * Input.
 */

var url = (argv.param('url') || [])[0];
var browsers = parseBrowsers(argv.param('browsers'));
var dest = (argv.param('dest') || [ path.resolve('.') ])[0];

/**
 * Validate input.
 */

if (!url) error('`--url` is missing');
if (!browsers.length) error('`--browsers` is missing');

var batch = new Batch;

browsers.forEach(function(browser) {
  var driver = wd.remote('ondemand.saucelabs.com', 80, user, key);

  var opts = {
    browserName: browser.name,
    platform: browser.platform,
    version: browser.version
  };

  batch.push(function(done) {
    driver.init(opts, function(err) {
      if (err) return done(err);

      driver.get(url, function(err) {
        if (err) return done(err);

        driver.takeScreenshot(function(err, data) {
          if (err) return done(err);
          fs.writeFile(filePath(dest, browser.alias, url), data, 'base64', done);
        });
      });
    });
  });
});

batch.end(function(err) {
  if (err) throw err;
  process.exit(0);
});

function error(msg) {
  console.error(msg);
  process.exit(1);
}

function filename(url, ext) {
  ext = ext || '.png';
  return url.replace(/\W+/g, '_') + '.' + ext;
}

function filePath(dir, alias, url) {
  return path.join(dir, alias + '_' + url.replace(/\W+/g, '_') + '.png');
}

function parseBrowsers(input) {
  input = (input || [])[0];

  return input.split(',').map(function(alias) {
    var entry = config[alias];
    if (!entry) error('invalid browser alias: ' + alias);
    entry.alias = alias;
    return entry;
  });
}
